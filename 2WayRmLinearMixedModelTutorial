## 2 WAY LINEAR MIXED MODEL (WITH REPEATED MEASURES) R TUTORIAL
##
# You have 2 factors that interact with each other
# You have repeated measures
# You have at least one random factor
# You have numerical data
# Display in a vertical fashion in Excel 
# Data points can be missing, but structure has to be equilibrated
# Install packages: nlme, car, multcomp, nlmeU
# Disclaimer: I AM NOT THE AUTHOR OF THESE PACKAGES.
# CHECK INFORMATION AFTER YOU INSTALL THEM.
#____________________________________________________________________

###FIRST STEP: Prepare environment and import data

# Clean environement
rm(list=ls())

#Summon Libraries/Packages we use
library(nlme) #fit linear mixed models
library(car)
library(multcomp) #tukey tests for mixed effects models
library(nlmeU) #check statistical power

#File Import & Format Data
IData<-read.table("Data.txt",header=T)
f1<-IData$factor1
f2<-IData$factor2
y<-IData$observed_variable
ind<-IData$indivual #important for repeated measures
rf<-IData$randomfactor
Data<-data.frame(f1,f2,y,ind,rf)#order not important

#____________________________________________________________________

###SECOND STEP: Fit a simple mixed model and check assumptions

#Fit Simple Model and compare to H0 
simplemod<-lme(y ~ f1*f2, random= ~1|rf/ind,data= Data) #yes, you include individuals as random
anova(simplemod)

#Assumptions in order of importance:
#Assumption 1: Independance (depends on your design, I can't help you here)
#Assumption 2: Heteroskedasticity (equal variance amongst groups)
plot(fitted(simplemod),residuals(simplemod)) #if cloud is chaotic, it's met.
#Assumption 3: Residuals Normality
res<-residuals(type="pearson",simplemod)
st.res<-res/sd(res)
qqnorm(st.res,pch=16,main="")
qqline(st.res,col="red",lwd=2) #if dotted line follows red line, it's met
#Assumption 4: Sphericity (check documentation, I tend not to check for it)

#______________________________________________________________________

###THIRD STEP: Transform data to try and meet assumptions 2 and 3

#Fit Simple Model with log transformed data and compare to H0
sqrtmod<-lme(sqrt(y) ~ f1*f2, random= ~1|rf/ind,data= Data)
anova(sqrtmod)
#You can try various transformations
# (sqrt, log, rank, ^2, exp, ...)

#Then retry to meet assumptions with different transformations
#Assumption 2: Heteroskedasticity (equal variance)
plot(fitted(sqrtmod),residuals(sqrtmod)) #is it met now?
#Assumption 3: Residuals Normality
res<-residuals(type="pearson",sqrtmod)
st.res<-res/sd(res)
qqnorm(st.res,pch=16,main="")
qqline(st.res,col="red",lwd=2) #is it met now?

#_______________________________________________________________________

#If you still cannot meet assumption 2,
###FOURTH STEP: Add weights to model to try and meet assumption 2

#Fit Homoskedastic Model and compare to H0 (model does not account for different variances within groups)
homomod<-lme(y ~ f1*f2, random= ~1|rf/ind,data= Data) # you can include transformations here
anova(homomod)

#Fit Heteroskedastic Model to data and compare to H0 (model accounts for different variances within groups)
heteromod<-lme(y ~ f1*f2, random= ~1|rf/ind,weights=varComb(varIdent(form=~1|f1),varIdent(form=~1|f2),varIdent(form=~1|rf)),data= Data)
anova(heteromod)
#You don't have to include weights for EVERY factor. I find it works best though.

#Compare both models for better fit
anova(homomod,heteromod) #Looks at the AIC, the lower one fits better.

#Assumption 2: Heteroskedasticity (equal variance)
plot(fitted(heteromod),residuals(type="pearson",heteromod))#Is it finally met?
#Re-check Assumption 3: Residuals Normality
res<-residuals(type="pearson",heteromod)
st.res<-res/sd(res)
qqnorm(st.res,pch=16,main="")
qqline(st.res,col="red",lwd=2) #it shouldn't affect normality

#OPTIONAL: Look at within-groups Variance
plot(heteromod, resid(., type = "p") ~ fitted(.) | f1,id =0.05, adj = -0.3 )
plot(heteromod, resid(., type = "p") ~ fitted(.) | f2,id =0.05, adj = -0.3 )
plot(heteromod, resid(., type = "p") ~ fitted(.) | rf,id =0.05, adj = -0.3 )

#OPTIONAL: Look at within-groups normality
qqnorm(heteromod,~resid(.) | f1 )
qqnorm(heteromod,~resid(.) | f2 )
qqnorm(heteromod,~resid(.) | rf )

#Is one particular factor a problem?

#___________________________________________________________________________

###FITTH STEP (OPTIONAL): Check for outliers

#Graphically identify potential outliers
plot(heteromod,id=0.05,idLabels=row.names(Data)) #0.95 confidence interval
plot(heteromod,id=0.01,idLabels=row.names(Data)) #0.99 confidence interval

#Reformat data so it doesn't include identified outliers from previous step
##enter the numbers you see on the plot inbetween the parentheses down here.
Data95<-Data[-c(161,171,208), ]#0.95 confidence interval
Data99<-Data[-c(), ]#0.99 confidence interval

#Re-fit model WITHOUT outliers at chosen confidence (here 95)
heteromod<-lme(y ~ f1*f2, random= ~1|rf/ind,weights=varComb(varIdent(form=~1|f1),varIdent(form=~1|f2),varIdent(form=~1|rf)),data= Data95)
anova(heteromod)

##NB: Only remove outliers if:
#(1) technical errors are possible, 
#(2) outliers might not have biological significance, 
#(3) n would not be considerably reduced due to RMs (if you remove one point, the whole series for that individual is lost).

#____________________________________________________________________________

###FINAL STEP : Interpret model

#Re-fit Final Model
heteromod<-lme(y ~ f1*f2, random= ~1|rf/ind,weights=varComb(varIdent(form=~1|f1),varIdent(form=~1|f2),varIdent(form=~1|rf)),data= Data95)
anova(heteromod)
summary(heteromod)

#Post Hoc Tukey Test 
tuknerr_treat <- glht(heteromod, linfct = mcp(f1="Tukey",interaction_average=TRUE), test=adjusted(type="bonferroni"))
summary(tuknerr_treat)

tuknerr_treat <- glht(heteromod, linfct = mcp(f2="Tukey",interaction_average=TRUE), test=adjusted(type="bonferroni"))
summary(tuknerr_treat)

#Measure Statistical Power
library(nlmeU)
Pwr((heteromod))

#Good job!
#You've done it.
